{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/udesh/Desktop/CS/JS/demo-booking-system/client/src/App.tsx\",\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Steps, Button, message, DatePicker, Layout, Select, Card, Row, Col, Table, Progress } from 'antd';\nconst {\n  Option\n} = Select;\nconst {\n  Header,\n  Content\n} = Layout;\nconst {\n  Step\n} = Steps;\nconst steps = [{\n  title: 'Enter details'\n}, {\n  title: 'Vendor Availability'\n}, {\n  title: 'Complete your booking'\n}];\n\nconst App = () => {\n  _s4();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$(),\n      _s3 = $RefreshSig$();\n\n  const [current, setCurrent] = React.useState(0);\n  const [selectedVendorId, setSelectedVendorId] = React.useState(\"-\");\n  const [selectedServiceType, setSelectedServiceType] = React.useState(\"-\");\n  const [selectedAreaType, setSelectedAreaType] = React.useState(\"-\");\n  const [selectedLocationId, setSelectedLocationId] = React.useState(\"-\");\n  const [selectedDate, setSelectedDate] = React.useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [selectedBookingTime, setSelectedBookingTime] = React.useState(\"\");\n  const [selectedRowKeys, setSelectedRowKeys] = React.useState([]);\n\n  const next = () => {\n    if (current === 0 && (selectedVendorId === \"-\" || selectedServiceType === \"-\" || selectedAreaType === \"-\" || selectedLocationId === \"-\")) {\n      message.error('Select all details before proceed...');\n    } else {\n      setCurrent(current + 1);\n    }\n  };\n\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n\n  const complete = () => {\n    message.success('Registered your booking with vendor!');\n    setCurrent(0);\n    setSelectedVendorId(\"-\");\n    setSelectedServiceType(\"-\");\n    setSelectedAreaType(\"-\");\n    setSelectedLocationId(\"-\");\n    setSelectedDate(moment(new Date()).format('YYYY-MM-DD'));\n  };\n\n  const columns = [{\n    title: 'Time Slots',\n    dataIndex: 'name',\n    render: text => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }, this)\n  }];\n  const data = [{\n    key: '1',\n    name: '08:00',\n    status: 'inactive'\n  }, {\n    key: '2',\n    name: '08:30',\n    status: 'inactive'\n  }, {\n    key: '3',\n    name: '09:00',\n    status: 'inactive'\n  }, {\n    key: '4',\n    name: '09:30',\n    status: 'inactive'\n  }, {\n    key: '5',\n    name: '10:00',\n    status: 'inactive'\n  }, {\n    key: '6',\n    name: '10:30',\n    status: 'inactive'\n  }, {\n    key: '7',\n    name: '11:00',\n    status: 'inactive'\n  }, {\n    key: '8',\n    name: '11:30',\n    status: 'inactive'\n  }, {\n    key: '9',\n    name: '12:00',\n    status: 'inactive'\n  }, {\n    key: '10',\n    name: '12:30',\n    status: 'inactive'\n  }, {\n    key: '11',\n    name: '13:00',\n    status: 'inactive'\n  }, {\n    key: '12',\n    name: '13:30',\n    status: 'inactive'\n  }, {\n    key: '13',\n    name: '14:00',\n    status: 'inactive'\n  }, {\n    key: '14',\n    name: '14:30',\n    status: 'inactive'\n  }, {\n    key: '15',\n    name: '15:00',\n    status: 'inactive'\n  }, {\n    key: '16',\n    name: '15:30',\n    status: 'inactive'\n  }, {\n    key: '17',\n    name: '16:00',\n    status: 'inactive'\n  }, {\n    key: '18',\n    name: '16:30',\n    status: 'inactive'\n  }];\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys, selectedRows) => {\n      setSelectedBookingTime(selectedRows[0].name);\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    getCheckboxProps: record => ({\n      disabled: record.status === 'inactive',\n      name: record.name\n    })\n  };\n\n  const Day = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DayBookings, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  };\n\n  const CompleteBooking = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '50px 1px 100px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        title: \"Booking Confirm\",\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          type: \"circle\",\n          strokeColor: {\n            '0%': '#108ee9',\n            '100%': '#87d068'\n          },\n          percent: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"You are about to complete your booking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Start time : \", selectedDate, \":\", selectedBookingTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  };\n\n  const DetailsCapture = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '50px 1px 100px'\n    },\n    id: \"detailsCapture\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"site-card-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 10,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Booking Date\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              style: {\n                width: 160,\n                margin: '10px 10px 10px'\n              },\n              format: \"YYYY-MM-DD\",\n              value: moment(selectedDate),\n              onChange: onDateChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Service Type\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"Landscaping\",\n              style: {\n                width: 160,\n                margin: '10px 10px 10px'\n              },\n              value: selectedServiceType,\n              onChange: onServiceTypeChange,\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"LS\",\n                children: \"Landscaping\"\n              }, \"LS\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"LM\",\n                children: \"Lawn mower\"\n              }, \"LM\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Vendor Name\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(VendorList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Area(square feet)\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: \"S\",\n              style: {\n                width: 160,\n                margin: '10px 10px 10px'\n              },\n              value: selectedAreaType,\n              onChange: e => setSelectedAreaType(e),\n              children: [/*#__PURE__*/_jsxDEV(Option, {\n                value: \"S\",\n                children: \"500-1000\"\n              }, \"S\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Option, {\n                value: \"M\",\n                children: \"1000-2000\"\n              }, \"M\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"Location\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(LocationList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n\n  function onDateChange(date, dateString) {\n    setSelectedDate(dateString);\n  }\n\n  function onServiceTypeChange(selectedServiceType) {\n    setSelectedServiceType(selectedServiceType);\n    setSelectedVendorId(\"-\");\n  }\n\n  function DayBookings() {\n    _s();\n\n    const [timeslots, setTimeSlots] = React.useState([{\n      key: '1',\n      name: '08:00',\n      status: 'inactive'\n    }]);\n    React.useEffect(() => {\n      let unmounted = false;\n\n      async function getTimeSlots() {\n        axios.get(`http://localhost:8000/bookings`, {\n          params: {\n            vendorId: selectedVendorId,\n            locationId: selectedLocationId,\n            date: selectedDate\n          }\n        }).then(response => {\n          if (!unmounted) {\n            for (let i = 0; data.length > i; i++) {\n              if (data[i].name === response.data) {\n                for (let j = 0; i > j; j++) {\n                  data[j].status = \"inactive\";\n                }\n              }\n\n              if (response.data != \"16:30\") {\n                data[i].status = \"active\";\n              }\n            }\n\n            ;\n            setTimeSlots(data);\n          }\n        }).catch(error => {}).finally(() => {});\n      }\n\n      getTimeSlots();\n      return () => {\n        unmounted = true;\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: \"radio\",\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: timeslots,\n      pagination: false,\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(DayBookings, \"4NcREsMiCH+QRfHpJzVJDj6pzZo=\");\n\n  function LocationList() {\n    _s2();\n\n    const [loading, setLoading] = React.useState(true);\n    const [items, setItems] = React.useState([]);\n    React.useEffect(() => {\n      let unmounted = false;\n\n      async function getVendors() {\n        const response = await fetch(\"http://localhost:8000/locations\");\n        const results = await response.json();\n\n        if (!unmounted) {\n          setItems(results.map(({\n            name,\n            id\n          }) => ({\n            label: name,\n            value: id\n          })));\n          setLoading(false);\n        }\n      }\n\n      getVendors();\n      return () => {\n        unmounted = true;\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 160,\n        margin: '10px 10px 10px'\n      },\n      disabled: loading,\n      value: selectedLocationId,\n      onChange: e => setSelectedLocationId(e),\n      children: items.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(Option, {\n        value: value,\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(LocationList, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n  function VendorList() {\n    _s3();\n\n    const [loading, setLoading] = React.useState(true);\n    const [items, setItems] = React.useState([]);\n    React.useEffect(() => {\n      let unmounted = false;\n\n      async function getVendors() {\n        const response = await fetch(\"http://localhost:8000/vendors?serviceType=\" + selectedServiceType);\n        const results = await response.json();\n\n        if (!unmounted) {\n          setItems(results.map(({\n            name,\n            id\n          }) => ({\n            label: name,\n            value: id\n          })));\n          setLoading(false);\n        }\n      }\n\n      getVendors();\n      return () => {\n        unmounted = true;\n      };\n    }, []);\n    return /*#__PURE__*/_jsxDEV(Select, {\n      style: {\n        width: 160,\n        margin: '10px 10px 10px'\n      },\n      disabled: loading,\n      value: selectedVendorId,\n      onChange: e => setSelectedVendorId(e),\n      children: items.map(({\n        label,\n        value\n      }) => /*#__PURE__*/_jsxDEV(Option, {\n        value: value,\n        children: label\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s3(VendorList, \"X4x04bf2XOIdWC9JIzBW7u2/seA=\");\n\n  function confirmBooking() {\n    axios.post(`http://localhost:8000/register`, null, {\n      params: {\n        vendorId: selectedVendorId,\n        locationId: selectedLocationId,\n        date: selectedDate,\n        timeSlot: selectedBookingTime,\n        serviceType: selectedServiceType,\n        areaType: selectedAreaType\n      }\n    }).then(response => {\n      complete();\n    }).catch(error => {}).finally(() => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        style: {\n          padding: 0,\n          textAlign: 'center',\n          color: \"white\"\n        },\n        children: \"Demo Booking System \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        style: {\n          margin: '10% 5% 5%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Steps, {\n          current: current,\n          children: steps.map(item => /*#__PURE__*/_jsxDEV(Step, {\n            title: item.title\n          }, item.title, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [current === 0 ? /*#__PURE__*/_jsxDEV(DetailsCapture, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 30\n          }, this) : null, current === 1 ? /*#__PURE__*/_jsxDEV(Day, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 30\n          }, this) : null, current === 2 ? /*#__PURE__*/_jsxDEV(CompleteBooking, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 30\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"steps-action\",\n          children: [current > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '0 8px'\n            },\n            onClick: () => prev(),\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), current < steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '1px 16px 20px'\n            },\n            type: \"primary\",\n            onClick: () => next(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), current === steps.length - 1 && /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: '1px 16px 20px'\n            },\n            value: \"large\",\n            type: \"primary\",\n            onClick: () => confirmBooking(),\n            children: \"Confirm Booking\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s4(App, \"GmcpXpnx902gwqaUUDAbdz90ovg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/udesh/Desktop/CS/JS/demo-booking-system/client/src/App.tsx"],"names":["React","axios","moment","Steps","Button","message","DatePicker","Layout","Select","Card","Row","Col","Table","Progress","Option","Header","Content","Step","steps","title","App","current","setCurrent","useState","selectedVendorId","setSelectedVendorId","selectedServiceType","setSelectedServiceType","selectedAreaType","setSelectedAreaType","selectedLocationId","setSelectedLocationId","selectedDate","setSelectedDate","Date","format","selectedBookingTime","setSelectedBookingTime","selectedRowKeys","setSelectedRowKeys","next","error","prev","complete","success","columns","dataIndex","render","text","data","key","name","status","rowSelection","onChange","selectedRows","getCheckboxProps","record","disabled","Day","CompleteBooking","margin","DetailsCapture","width","onDateChange","onServiceTypeChange","e","date","dateString","DayBookings","timeslots","setTimeSlots","useEffect","unmounted","getTimeSlots","get","params","vendorId","locationId","then","response","i","length","j","catch","finally","type","LocationList","loading","setLoading","items","setItems","getVendors","fetch","results","json","map","id","label","value","VendorList","confirmBooking","post","timeSlot","serviceType","areaType","padding","textAlign","color","item"],"mappings":"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","sourcesContent":["import React, { ReactNode } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport moment from \"moment\";\nimport { Steps, Button, message, DatePicker, Layout, Select, Card, Row, Col, Table, Progress } from 'antd';\nconst { Option } = Select;\nconst { Header, Content } = Layout;\nconst { Step } = Steps;\n\nconst steps = [\n  {\n    title: 'Enter details',\n  },\n  {\n    title: 'Vendor Availability',\n  },\n  {\n    title: 'Complete your booking',\n  },\n];\n\nconst App = () => {\n  const [current, setCurrent] = React.useState(0);\n  const [selectedVendorId, setSelectedVendorId] = React.useState(\"-\");\n  const [selectedServiceType, setSelectedServiceType] = React.useState(\"-\");\n  const [selectedAreaType, setSelectedAreaType] = React.useState(\"-\");\n  const [selectedLocationId, setSelectedLocationId] = React.useState(\"-\");\n  const [selectedDate, setSelectedDate] = React.useState(moment(new Date()).format('YYYY-MM-DD'));\n  const [selectedBookingTime, setSelectedBookingTime] = React.useState(\"\");\n  const [selectedRowKeys, setSelectedRowKeys] = React.useState([]);\n\n  const next = () => {\n    if (current === 0 && (selectedVendorId === \"-\" || selectedServiceType === \"-\" || selectedAreaType === \"-\" || selectedLocationId === \"-\")) {\n      message.error('Select all details before proceed...')\n    } else {\n      setCurrent(current + 1);\n    }\n  };\n  const prev = () => {\n    setCurrent(current - 1);\n  };\n  const complete = () => {\n    message.success('Registered your booking with vendor!')\n    setCurrent(0);\n    setSelectedVendorId(\"-\");\n    setSelectedServiceType(\"-\");\n    setSelectedAreaType(\"-\");\n    setSelectedLocationId(\"-\");\n    setSelectedDate(moment(new Date()).format('YYYY-MM-DD'));\n  };\n  const columns = [\n    {\n      title: 'Time Slots',\n      dataIndex: 'name',\n      render: (text: React.ReactNode) => <li>{text}</li>,\n    }\n  ];\n  const data = [\n    { key: '1', name: '08:00', status: 'inactive' }, { key: '2', name: '08:30', status: 'inactive' },\n    { key: '3', name: '09:00', status: 'inactive' }, { key: '4', name: '09:30', status: 'inactive' },\n    { key: '5', name: '10:00', status: 'inactive' }, { key: '6', name: '10:30', status: 'inactive' },\n    { key: '7', name: '11:00', status: 'inactive' }, { key: '8', name: '11:30', status: 'inactive' },\n    { key: '9', name: '12:00', status: 'inactive' }, { key: '10', name: '12:30', status: 'inactive' },\n    { key: '11', name: '13:00', status: 'inactive' }, { key: '12', name: '13:30', status: 'inactive' },\n    { key: '13', name: '14:00', status: 'inactive' }, { key: '14', name: '14:30', status: 'inactive' },\n    { key: '15', name: '15:00', status: 'inactive' }, { key: '16', name: '15:30', status: 'inactive' },\n    { key: '17', name: '16:00', status: 'inactive' }, { key: '18', name: '16:30', status: 'inactive' },\n  ];\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedRowKeys: any, selectedRows: any) => {\n      setSelectedBookingTime(selectedRows[0].name);\n      setSelectedRowKeys(selectedRowKeys);\n    },\n    getCheckboxProps: (record: { name: string, status: string }) => ({\n      disabled: record.status === 'inactive',\n      name: record.name,\n    }),\n  };\n  const Day = () => {\n    return (\n      <div>\n        <DayBookings></DayBookings>\n      </div>\n    );\n  };\n  const CompleteBooking = () => {\n    return (\n      <div style={{ margin: '50px 1px 100px' }}>\n\n        <Card title=\"Booking Confirm\">\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#108ee9',\n              '100%': '#87d068',\n            }}\n            percent={100}\n          />\n          <li>You are about to complete your booking.</li>\n          <li>Start time : {selectedDate}:{selectedBookingTime}</li>\n\n        </Card>\n      </div>\n    );\n  };\n  const DetailsCapture = () => (\n    <div style={{ margin: '50px 1px 100px' }} id=\"detailsCapture\">\n      <div className=\"site-card-wrapper\">\n        <Row gutter={10}>\n          <Col span={4}>\n            <Card title=\"Booking Date\" bordered={false}>\n              <DatePicker style={{ width: 160, margin: '10px 10px 10px' }} format=\"YYYY-MM-DD\"\n                value={moment(selectedDate)} onChange={onDateChange}></DatePicker>\n            </Card>\n          </Col>\n          <Col span={4}>\n            <Card title=\"Service Type\" bordered={false}>\n              <Select defaultValue=\"Landscaping\" style={{ width: 160, margin: '10px 10px 10px' }} value={selectedServiceType}\n                onChange={onServiceTypeChange}>\n                <Option key=\"LS\" value=\"LS\">Landscaping</Option>\n                <Option key=\"LM\" value=\"LM\">Lawn mower</Option>\n              </Select>\n            </Card>\n          </Col>\n          <Col span={4}>\n            <Card title=\"Vendor Name\" bordered={false}>\n              <VendorList />\n            </Card>\n          </Col>\n          <Col span={4}>\n            <Card title=\"Area(square feet)\" bordered={false}>\n              <Select defaultValue=\"S\" style={{ width: 160, margin: '10px 10px 10px' }} value={selectedAreaType}\n                onChange={(e) => setSelectedAreaType(e)}>\n                <Option key=\"S\" value=\"S\">500-1000</Option>\n                <Option key=\"M\" value=\"M\">1000-2000</Option>\n              </Select>\n            </Card>\n          </Col>\n          <Col span={4}>\n            <Card title=\"Location\" bordered={false}>\n              <LocationList />\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    </div>\n\n  )\n  function onDateChange(date: any, dateString: any) {\n    setSelectedDate(dateString);\n  }\n  function onServiceTypeChange(selectedServiceType: any) {\n    setSelectedServiceType(selectedServiceType);\n    setSelectedVendorId(\"-\");\n  }\n\n  function DayBookings() {\n    const [timeslots, setTimeSlots] = React.useState([{ key: '1', name: '08:00', status: 'inactive' }]);\n    React.useEffect(() => {\n      let unmounted = false;\n      async function getTimeSlots() {\n        axios.get(`http://localhost:8000/bookings`, {\n          params: {\n            vendorId: selectedVendorId,\n            locationId: selectedLocationId,\n            date: selectedDate\n\n          },\n        }).then((response) => {\n          if (!unmounted) {\n            for (let i = 0; data.length > i; i++) {\n              if (data[i].name === response.data) {\n                for (let j = 0; i > j; j++) {\n                  data[j].status = \"inactive\";\n                }\n\n              }\n              if (response.data != \"16:30\") {\n                data[i].status = \"active\";\n              }\n\n            };\n            setTimeSlots(data);\n          }\n        }).catch((error) => {\n\n        })\n          .finally(() => {\n\n          });\n      }\n      getTimeSlots();\n      return () => {\n        unmounted = true;\n      };\n\n    }, []);\n    return (\n      <Table\n        rowSelection={{\n          type: \"radio\",\n          ...rowSelection,\n        }}\n        columns={columns}\n        dataSource={timeslots}\n        pagination={false}\n        size='small'\n      />\n    );\n  }\n  function LocationList() {\n    const [loading, setLoading] = React.useState(true);\n    const [items, setItems] = React.useState([]);\n    interface IProps {\n      name: string;\n      id: string\n    }\n    React.useEffect(() => {\n      let unmounted = false;\n      async function getVendors() {\n        const response = await fetch(\n          \"http://localhost:8000/locations\"\n        );\n        const results = await response.json();\n        if (!unmounted) {\n          setItems(\n            results.map(({ name, id }: IProps) => ({ label: name, value: id }))\n          );\n          setLoading(false);\n        }\n      }\n      getVendors();\n      return () => {\n        unmounted = true;\n      };\n    }, []);\n    return (\n      <Select style={{ width: 160, margin: '10px 10px 10px' }}\n        disabled={loading}\n        value={selectedLocationId}\n        onChange={(e) => setSelectedLocationId(e)}\n      >\n        {items.map(({ label, value }) => (\n          <Option key={value} value={value}>\n            {label}\n          </Option>\n        ))}\n      </Select>\n    );\n  }\n\n  function VendorList() {\n    const [loading, setLoading] = React.useState(true);\n    const [items, setItems] = React.useState([]);\n    interface IProps {\n      name: ReactNode;\n      id: ReactNode\n    }\n    React.useEffect(() => {\n      let unmounted = false;\n      async function getVendors() {\n        const response = await fetch(\n          \"http://localhost:8000/vendors?serviceType=\" + selectedServiceType\n        );\n        const results = await response.json();\n        if (!unmounted) {\n          setItems(\n            results.map(({ name, id }: IProps) => ({ label: name, value: id }))\n          );\n          setLoading(false);\n        }\n      }\n      getVendors();\n      return () => {\n        unmounted = true;\n      };\n    }, []);\n    return (\n      <Select style={{ width: 160, margin: '10px 10px 10px' }}\n        disabled={loading}\n        value={selectedVendorId}\n        onChange={(e) => setSelectedVendorId(e)}\n      >\n        {items.map(({ label, value }) => (\n          <Option key={value} value={value}>\n            {label}\n          </Option>\n        ))}\n      </Select>\n    );\n  }\n\n  function confirmBooking() {\n    axios.post(`http://localhost:8000/register`, null, {\n      params: {\n        vendorId: selectedVendorId,\n        locationId: selectedLocationId,\n        date: selectedDate,\n        timeSlot: selectedBookingTime,\n        serviceType: selectedServiceType,\n        areaType: selectedAreaType\n      },\n    }).then((response) => {\n      complete();\n    }).catch((error) => {\n\n    })\n      .finally(() => {\n\n      });\n  }\n\n  return (\n    <>\n      <Layout>\n        <Header style={{ padding: 0, textAlign: 'center', color: \"white\" }} >Demo Booking System </Header>\n        <Content style={{ margin: '10% 5% 5%' }}>\n          <Steps current={current}>\n            {steps.map(item => (\n              <Step key={item.title} title={item.title} />\n            ))}\n          </Steps>\n          <div>\n            {current === 0 ? <DetailsCapture /> : null}\n            {current === 1 ? <Day /> : null}\n            {current === 2 ? <CompleteBooking /> : null}\n          </div>\n\n          <div className=\"steps-action\">\n            {current > 0 && (\n              <Button style={{ margin: '0 8px' }} onClick={() => prev()}>\n                Previous\n              </Button>\n            )}\n            {current < steps.length - 1 && (\n              <Button style={{ margin: '1px 16px 20px' }} type=\"primary\" onClick={() => next()}>\n                Next\n              </Button>\n            )}\n            {current === steps.length - 1 && (\n              <Button style={{ margin: '1px 16px 20px' }} value=\"large\" type=\"primary\" onClick={() => confirmBooking()}>\n                Confirm Booking\n              </Button>\n            )}\n\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}